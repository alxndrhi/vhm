#!/usr/bin/env bash
# vim: set ft=sh:ts=2:sw=2
#
# Virtual Host Manager (vhm)
# Find more Information here: http://github.com/alxndrhi/vhm
# @author Alexander Hinrichs

## Check if the User has a Configuration File and use this
if [ -f ~/.vhm.cfg ];
then
  source ~/.vhm.cfg
else
  # Default Path of the Configuration File.
  source /usr/local/etc/vhm/vhm.cfg
fi

### VARIABLES AND CONSTANTS
version_no=0.2.0
action_version=-1
action_create=-1
action_enable=-1
action_disable=-1
action_delete=-1
action_info=-1
action_status=-1
action_list=-1
apache_restart=-1
is_domain_action=-1

server_port=$default_port
sudo=$use_sudo

## Colors
color_reset=$(tput sgr0)
color_red=$(tput setaf 1)
color_green=$(tput setaf 2)
 
### FUNCTINS
disable () {
 if [ -f $sites_enabled/$1.conf ]
 then
   rm $sites_enabled/$1.conf
 fi
}

usage () {
  echo "Usage: vhm --domain example.dev --create --enable --apache-restart"
  echo
  echo "Parameter:"
  echo "cr  | -cr  | --create           create VirtualHost"
  echo "en  | -en  | --enable           enable VirtualHost"
  echo "dis | -dis | --disable          disable VirtualHost"
  echo "del | -del | --delete           delete VirtualHost"
  echo "ar  | -ar  | --apache-restart   Restart Apache"
  echo "-i  | --info              show VirtualHost File for given Domain"
  echo "-p  | --port              show VirtualHost File for given Domain"
  echo "-s  | --status            show VirtualHost (enabled, disabled, not created)"
  echo "-d  | --domain            Domain Name for the VirtualHost"
  echo "-t  | --template          Template Name to use for this Host"
  echo "-l  | --list              List available and enabled domains"
  echo "-v  | --version           Print version"
  echo "-h  | --help              This little message"
  echo
  echo "Parameter can be combined. So --create and --enable in one command is possible"
  echo
  echo "You may not use --create and --delete in one command."
  echo "Same goes for --enable and --disable."
  echo "That would be ..."
  echo
}

### MAIN
if [ $# -eq 0 ]; then
  usage
  exit 1
fi

while [ "$1" != "" ]; do
  case $1 in
    -p | --port)
      shift
      server_port=$1
      is_domain_action=1
    ;;
    -h | --help)
      usage
      exit 0
      ;;
    -d | --domain)
      shift
      domain=$1
      is_domain_action=1
      ;;
    ar | -ar | --apache-restart)
      apache_restart=1
      ;;
    -t | --template)
      shift
      template=$1
      is_domain_action=1
      ;;
    cr | -cr | --create)
      action_create=1
      is_domain_action=1
     ;;
    en | -en | --enable)
      action_enable=1
      is_domain_action=1
      ;;
    dis | -dis | --disable)
      action_disable=1
      is_domain_action=1
      ;;
    del | -del | --delete)
      action_delete=1
      is_domain_action=1
      ;;
    -i | --info)
      action_info=1
      is_domain_action=1
      ;;
    -s | --status)
      action_status=1
      is_domain_action=1
      ;;
    -l | --list)
      action_list=1
      ;;
    -v | --version)
      action_version=1
      ;;
    *)
     ;;
  esac
  shift
done

if [ "$domain" == "" ] && [ $is_domain_action -eq 1 ]; then
  echo
  printf "%s\n" "${color_red}Error: missing domain${color_reset}"
  echo
  usage
  exit 1
else
  if [ $action_status -eq 1 ];
  then
    if [ -f $sites_enabled/$domain.conf ];
    then
      printf "%s\n" "Status: ${color_green}enabled${color_reset}"
    else
      if [ -f $sites_available/$domain.conf ];
      then
        printf "%s\n" "Status: ${color_red}disabled${color_reset}"
      else
        printf "%s\n" "Status: ${color_red}no domain with this name${color_reset}"
        printf "%s\n" "see: 'vhm -l' for a list of Domains"
      fi
    fi
  fi

  if [ $action_create -eq 1 ] && [ $action_delete -eq 1 ]; then
    usage
    exit 1
  elif [ $action_create -eq 1 ]; then
    vhost_template=$template_folder/$template_default
    sed "s@SERVER-ADMIN@$admin_email@g;s@SERVER-PATH-ROOT@$(pwd)@g;s@SERVER-NAME@$domain@g;s@SERVER-PATH-LOG@$server_path_log@g;s@SERVER-PORT@$server_port@g" $vhost_template > $sites_available/$domain.conf
  elif [ $action_delete -eq 1 ]; then
    disable $domain
    rm $sites_available/$domain.conf
  fi

  if [ $action_disable -eq 1 ] && [ $action_enable -eq 1 ]; then
    usage
    exit 1
  elif [ $action_enable -eq 1 ]; then
    ln -s $sites_available/$domain.conf $sites_enabled/$domain.conf
  elif [ $action_disable -eq 1 ]; then
    disable $domain
  fi

  if [ $action_info -eq 1 ];
  then
    if [ -f $sites_available/$domain.conf ];
    then
      cat $sites_available/$domain.conf
    else
      echo "Configuration not found"
    fi
  fi

  if [ $apache_restart -eq 1 ]; then
    if [ $sudo -eq 1 ]; then
      echo "restarting Apache using sudo"
      sudo apachectl restart
    else
      apachectl restart
    fi
  fi

  if [ $action_list -eq 1 ]; then
    dir_available=`ls -lhA $sites_available |awk '{print $9}'`
   for file_name in $dir_available; do
     domain_name=`echo $file_name | sed "s@.conf@@g"`

      is_enabled="${color_red}disabled${color_reset}"
      if [ -L $sites_enabled/$file_name ]; then
        is_enabled="${color_green}enabled${color_reset}"
      fi
      printf '%-30s %8s\n' "$domain_name" "$is_enabled"
    done
  fi

  if [ $action_version -eq 1 ]; then
    printf "Version %s\n" "$version_no"
  fi
fi
